---
- name: Create nethermind bin directory
  file:
    path: /mnt/block-volume/ethereum/.bin/nethermind
    state: directory
    mode: '0755'
- name: Get infos on the latest release
  uri:
    url: https://api.github.com/repos/NethermindEth/nethermind/releases/latest
    return_content: yes
  register: release_info
- name: Extract download URL for amd64 Linux
  set_fact:
    download_url: "{{ item.browser_download_url }}"
  loop: "{{ release_info.json.assets }}"
  when: "'linux-x64' in item.name"
- name: Set the first matching download URL as a fact
  set_fact:
    final_download_url: "{{ download_url | first }}"
  when: download_url is defined and download_url | length > 0
- debug:
    msg: "The download URL is {{ final_download_url }}"
- name: Set download directory
  set_fact:
    version: "{{ release_info.json.tag_name }}"
    download_path: "/mnt/block-volume/ethereum/.bin/{{ release_info.json.tag_name }}/nethermind-{{ release_info.json.tag_name }}-linux-amd64.zip"
    dest_folder: "/mnt/block-volume/ethereum/.bin/{{ release_info.json.tag_name }}/"
- name: Create directory for version
  file:
    path: "{{ dest_folder }}"
    state: directory
    mode: '0755'
- name: Check if binary already exists
  stat:
    path: "{{ download_path }}"
  register: binary_stat
- name: Download binary if it does not exist
  get_url:
    url: "{{ final_download_url }}"
    dest: "{{ download_path }}"
  when: not binary_stat.stat.exists
- name: Unarchive binary
  ansible.builtin.unarchive:
    src: "{{ download_path }}"
    dest: "{{ dest_folder }}"
    remote_src: yes
  when: not binary_stat.stat.exists
