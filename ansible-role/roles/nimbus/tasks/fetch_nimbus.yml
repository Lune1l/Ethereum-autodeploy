---
- name: Get info on the latest release
  uri:
    url: https://api.github.com/repos/status-im/nimbus-eth2/releases/latest
    return_content: yes
  register: release_info
- name: Extract download URL for amd64 Linux
  set_fact:
    download_url: "{{ item.browser_download_url }}"
  with_items: "{{ release_info.json.assets }}"
  when: "'Linux_amd64' in item.name"
- name: Set download directory
  set_fact:
    version: "{{ release_info.json.tag_name }}"
    download_path: "/mnt/block-volume/{{ node_user_name }}/.bin/{{ release_info.json.tag_name }}/nimbus-eth2-{{ release_info.json.tag_name }}-linux-amd64.tar.gz"
    dest_folder: "/mnt/block-volume/{{ node_user_name }}/.bin/{{ release_info.json.tag_name }}/"
- name: Create directory for version
  file:
    path: "{{ dest_folder }}"
    state: directory
    mode: '0755'
- name: Check if binary already exists
  stat:
    path: "{{ download_path }}"
  register: binary_stat
- name: Download binary if it does not exist
  get_url:
    url: "{{ download_url }}"
    dest: "{{ download_path }}"
  when: not binary_stat.stat.exists
- name: Unarchive binary
  ansible.builtin.unarchive:
    src: "{{ download_path }}"
    dest: "{{ dest_folder }}"
    remote_src: yes
  register: unarchive_result
  when: not binary_stat.stat.exists
- name: List contents of the destination folder
  find:
    paths: "{{ dest_folder }}"
    file_type: directory
    depth: 1
  register: folder_contents
  when: unarchive_result.changed
- name: Set extracted folder name
  set_fact:
    extracted_folder_name: "{{ item.path | basename }}"
  with_items: "{{ folder_contents.files }}"
  when: "'{{ dest_folder }}/{{ item.path | basename }}' != '{{ dest_folder }}'"
  when: unarchive_result.changed